LongInt
mins <- seq(min(gastos),
min(gastos)+((LongInt))*6,
by = LongInt)
maxs <- mins + LongInt-1
TDF <- data.frame(
min = mins,
max = maxs
)
TDF
for(i in 1: nrow(TDF)){
TDF$fi[i] <- length(
which(
TDF$min[i] <= gastos & gastos <= TDF$max[i]
)
)
}
TDF
TDF$fr <- round(TDF$fi/length(gastos),2)
TDF
for(i in 1:nrow(TDF)){
TDF$Fi[i] <- sum(TDF$fi[1:i])
}
options(knitr.table.format = "latex")
for(i in 1:nrow(TDF)){
TDF$Fr[i] <- sum(TDF$fr[1:i])
}
TDF2 <- TDF
colnames(TDF2) <- c('min.',
'max.',
'f~i~',
'f~r~',
'F~i~',
'F~r~'
)
knitr::kable(TDF2,"simple")
for(i in 1: nrow(TDFc)){
TDFc$fi[i] <- length(
which(
TDFc$min[i] <= consistenciaa & consistenciaa <= TDFc$max[i]
)
)
}
for(i in 1: nrow(TDFc)){
TDFc$fi[i] <- length(
which(
TDFc$min[i] <= consistenciaa & consistenciaa <= TDFc$max[i]
)
)
}
TDFc
for(i in 1: nrow(TDFc)){
TDFc$fi[i] <- length(
which(
TDFc$min[i] <= consistenciaa & consistenciaa <= TDFc$max[i]
)
)
}
TDFc
TDFc
TDF$fr <- round(TDF$fi/length(gastos),2)
TDFc$fr <- round(TDFc$fi/length(consistenciaa),2)
TDFc
for(i in 1:nrow(TDF)){
TDF$Fi[i] <- sum(TDF$fi[1:i])
}
for(i in 1:nrow(TDFc)){
TDFc$Fi[i] <- sum(TDFc$fi[1:i])
}
for(i in 1:nrow(TDF)){
TDF$Fr[i] <- sum(TDF$fr[1:i])
}
for(i in 1:nrow(TDFc)){
TDFc$Fr[i] <- sum(TDFc$fr[1:i])
}
tDFc
TDFc
TDFc2 <- TDFc
colnames(TDFc2) <- c('min.',
'max.',
'f~i~',
'f~r~',
'F~i~',
'F~r~'
)
knitr::kable(TDFc2,"simple")
library(kintr)
for(i in 1:nrow(TDFc)){
TDFc$Fr[i] <- sum(TDFc$fr[1:i])
}
TDFc
library(ggplot2)
intervalosc <- sort(factor(paste(TDFc$min,'-',TDFc$max),
levels = paste(TDFc$min,'-',TDF$maxc),) )
ggplot(TDFc,
aes(x = reorder(intervalosc,intervalosc, function(x)-length(x)),
y = fr*100,
fill=intervalosc,
label = round(fr*100,2)
)
) +
geom_bar(stat="identity") +
xlab("intervalo") +
ylab('% frecuencia relativa')+
geom_label(aes(fill = intervalosc),
colour = "white",
fontface = "italic") +
theme(axis.text.x = element_blank())
library(ggplot2)
intervalosc <- sort(factor(paste(TDFc$min,'-',TDFc$max),
levels = paste(TDFc$min,'-',TDFc$max),) )
ggplot(TDFc,
aes(x = reorder(intervalosc,intervalosc, function(x)-length(x)),
y = fr*100,
fill=intervalosc,
label = round(fr*100,2)
)
) +
geom_bar(stat="identity") +
xlab("intervalo") +
ylab('% frecuencia relativa')+
geom_label(aes(fill = intervalosc),
colour = "white",
fontface = "italic") +
theme(axis.text.x = element_blank())
TDFc
TDFc2 <- TDFc
colnames(TDFc2) <- c('min.',
'max.',
'f~i~',
'f~r~',
'F~i~',
'F~r~'
)
knitr::kable(TDFc2, 'simple')
sum(TDF$fi)
sum(TDFc$fi)
max(consistenciaa)
maxs2 <- mins2 + LongInt2-0.0001
library(readxl)
tarea1 <- read_excel("./tarea1.xlsx")
gastos <- tarea1$gastos
length(gastos)
k <- 1 + (3.322 * log10(90))
k
round(k,0)
LongInt <- (max(gastos)-min(gastos))/7
LongInt
LongInt <- round(LongInt,0)
LongInt
mins <- seq(min(gastos),
min(gastos)+((LongInt))*6,
by = LongInt)
maxs <- mins + LongInt-1
TDF <- data.frame(
min = mins,
max = maxs
)
TDF
for(i in 1: nrow(TDF)){
TDF$fi[i] <- length(
which(
TDF$min[i] <= gastos & gastos <= TDF$max[i]
)
)
}
TDF
TDF$fr <- round(TDF$fi/length(gastos),2)
TDF
for(i in 1:nrow(TDF)){
TDF$Fi[i] <- sum(TDF$fi[1:i])
}
options(knitr.table.format = "latex")
for(i in 1:nrow(TDF)){
TDF$Fr[i] <- sum(TDF$fr[1:i])
}
TDF2 <- TDF
colnames(TDF2) <- c('min.',
'max.',
'f~i~',
'f~r~',
'F~i~',
'F~r~'
)
knitr::kable(TDF2,"simple")
maxs2 <- mins2 + LongInt2-0.0001
mins2 <- seq(min(consistenciaa),
min(consistenciaa)+((LongInt2))*6,
by = LongInt2)
maxs2 <- mins2 + LongInt2-0.0001
max2[7] <- max2[7] + 0.0001
maxs2 <- mins2 + LongInt2-0.0001
maxs2[7] <- maxs2[7] + 0.0001
TDFc <- data.frame(
min = round(mins2,4),
max = round(maxs2,4))
TDFc
sum(TDFc$fi)
TDFc
LongInt2 <- (max(consistenciaa)-min(consistenciaa))/7
round(LongInt2,4)
mins2 <- seq(min(consistenciaa),
min(consistenciaa)+((LongInt2))*6,
by = LongInt2)
maxs2 <- mins2 + LongInt2-0.0001
maxs2[7] <- maxs2[7] + 0.0001
TDFc <- data.frame(
min = round(mins2,4),
max = round(maxs2,4))
TDFc
for(i in 1: nrow(TDFc)){
TDFc$fi[i] <- length(
which(
TDFc$min[i] <= consistenciaa & consistenciaa <= TDFc$max[i]
)
)
}
TDFc
TDFc$fr <- round(TDFc$fi/length(consistenciaa),2)
for(i in 1:nrow(TDFc)){
TDFc$Fi[i] <- sum(TDFc$fi[1:i])
}
for(i in 1:nrow(TDFc)){
TDFc$Fr[i] <- sum(TDFc$fr[1:i])
}
TDFc2 <- TDFc
colnames(TDFc2) <- c('min.',
'max.',
'f~i~',
'f~r~',
'F~i~',
'F~r~'
)
TDFc2
TDFc
sum(TDFc$fi)
str(consistencia)
str(consistencia)
str(consistencia)
str(consistenciaa)
sum(TDFc$fr)
TDFc$fr <- TDFc$fi/length(consistenciaa)
for(i in 1:nrow(TDFc)){
TDFc$Fi[i] <- sum(TDFc$fi[1:i])
}
fresa$variables[1]
variables <- c('gradosbrixa',
'consistenciaa', 'gradosbrixb', 'consistenciab', 'gradosbrixc' , 'consistenciac')
fresa$variables[1]
variables[1]
variables <- c('gradosbrixa',
'consistenciaa', 'gradosbrixb', 'consistenciab', 'gradosbrixc' , 'consistenciac')
which(is.na(fresa$gradosbrixa))
which(is.na(fresa$consistenciaa))
which(is.na(fresa$gradosbrixb))
which(is.na(fresa$consistenciab))
which(is.na(fresa$gradosbrixc))
which(is.na(fresa$gradosbrixa))
which(is.na(fresa$consistenciaa))
which(is.na(fresa$gradosbrixb))
which(is.na(fresa$consistenciab))
which(is.na(fresa$gradosbrixc))
which(is.na(fresa$consistenciac))
df3 <-  data.frame(gradosbrixa = fresa$gradosbrixa[-nasCor],
consistenciaa = fresa$consistenciaa[-nasCor],
gradosbrixb = fresa$gradosbrixb[-nasCor],
consistenciab = fresa$consistenciab[-nasCor],
gradosbrixb = fresa$gradosbrixb[-nasCor],
consistenciab = fresa$consistenciab[-nasCor])
which(is.na(fresa$gradosbrixa))
which(is.na(fresa$consistenciaa))
which(is.na(fresa$gradosbrixb))
which(is.na(fresa$consistenciab))
which(is.na(fresa$gradosbrixc))
which(is.na(fresa$consistenciac))
nasCor <-  which(is.na(fresa$gradosbrixa))
df3 <-  data.frame(gradosbrixa = fresa$gradosbrixa[-nasCor],
consistenciaa = fresa$consistenciaa[-nasCor],
gradosbrixb = fresa$gradosbrixb[-nasCor],
consistenciab = fresa$consistenciab[-nasCor],
gradosbrixb = fresa$gradosbrixb[-nasCor],
consistenciab = fresa$consistenciab[-nasCor])
df3 <-  data.frame(gradosbrixa = fresa$gradosbrixa[-nasCor],
consistenciaa = fresa$consistenciaa[-nasCor],
gradosbrixb = fresa$gradosbrixb[-nasCor],
consistenciab = fresa$consistenciab[-nasCor],
gradosbrixb = fresa$gradosbrixb[-nasCor],
consistenciab = fresa$consistenciab[-nasCor])
cor(df3)
df3 <-  data.frame(gradosbrixa = fresa$gradosbrixa[-nasCor],
consistenciaa = fresa$consistenciaa[-nasCor],
gradosbrixb = fresa$gradosbrixb[-nasCor],
consistenciab = fresa$consistenciab[-nasCor],
gradosbrixb = fresa$gradosbrixb[-nasCor],
consistenciab = fresa$consistenciab[-nasCor])
cor(df3)
pairs(df3)
df3 <-  data.frame(gradosbrixa = fresa$gradosbrixa[-nasCor],
consistenciaa = fresa$consistenciaa[-nasCor],
gradosbrixb = fresa$gradosbrixb[-nasCor],
consistenciab = fresa$consistenciab[-nasCor],
gradosbrixc = fresa$gradosbrixc[-nasCor],
consistenciac = fresa$consistenciac[-nasCor])
cor(df3)
pairs(df3)
boxplot(fresa$consistenciac ~ fresa$tratamientoc, xlab = "Tratamiento C", ylab = "Consistencia C", col= colores)
fresa2 <- fresa
fresa2$consistenciac <- fresa2$consistenciac[-c(max(fresa2$consistenciac))]
fresa2 <- fresa
fresa2$consistenciac <- fresa2$consistenciac[-c(max(fresa2$consistenciac))]
fresa2 <- fresa
consistenciac <- fresa2$consistenciac[-c(max(fresa2$consistenciac))]
library(ggplot2)
intervalosc <- sort(factor(paste(TDFc$min,'-',TDFc$max),
levels = paste(TDFc$min,'-',TDFc$max),) )
ggplot(TDFc,
aes(x = reorder(intervalosc,intervalosc, function(x)-length(x)),
y = fr*100,
fill=intervalosc,
label = round(fr*100,2)
)
) +
geom_bar(stat="identity") +
xlab("intervalo") +
ylab('% frecuencia relativa')+
geom_label(aes(fill = intervalosc),
colour = "white",
fontface = "italic") +
theme(axis.text.x = element_blank())
chart.Correlation(df3, histogram=TRUE, pch=19)
install.packages('PerformanceAnalytics')
library(PerformanceAnalytics)
chart.Correlation(df3, histogram=TRUE, pch=19)
library(ggplot2)
intervalos <- sort(factor(paste(TDF$min,'-',TDF$max),
levels = paste(TDF$min,'-',TDF$max),) )
ggplot(TDF,
aes(x = reorder(intervalos,intervalos, function(x)-length(x)),
y = fr*100,
fill=intervalos,
label = round(fr*100,2)
)
) +
geom_bar(stat="identity") +
xlab("intervalo") +
ylab('% frecuencia relativa')+
geom_label(aes(fill = intervalos),
colour = "white",
fontface = "italic") +
theme(axis.text.x = element_blank())
library(e1071)
kurtosis(TDF$fr)
skewness(TDF$fr)
nas <- which(is.na(fresa$gradosbrixa))
colores<-c("#00AFBB", "#E7B800", "#FC4E07")
df1 <- data.frame(gradosbrixa = fresa$gradosbrixa[-nas],
tratamientob = as.factor(fresa$tratamientob[-nas]))
library(ggplot2)
ggplot(df1,
aes( x = tratamientob,
y = gradosbrixa,
fill = tratamientob)) +
geom_boxplot()
boxplot(fresa$consistenciac ~ fresa$tratamientoc, xlab = "Tratamiento C", ylab = "Consistencia C", col= colores)
library(dplyr)
fresa2 <- fresa
IQR1 <- IQR(filter(fresa2, tratamientoc == 1) %>% select(consistenciac) %>% unlist )
consistenciac <- fresa2$consistenciac[-c(max(fresa2$consistenciac))]
IQR1
tratc1 <- filter(fresa2, tratamientoc == 1) %>% select(consistenciac) %>% unlist
quantile(tratc1)
CritInf1 <- quantile(tratc1)[2] - 1.5*IQR1
CritInf1 <- quantile(tratc1)[2] - 1.5*IQR1
CritSup1 <- quantile(tratc1)[4] + 1.5*IQR1
which(tratc1 < CritInf1 | tratc1 > CritSup1)
library(dplyr)
fresa2 <- fresa
]
library(dplyr)
fresa2 <- fresa
tratc1 <- filter(fresa2, tratamientoc == 1) %>% select(consistenciac) %>% unlist
IQR1 <- IQR(tratc1)
CritInf1 <- quantile(tratc1)[2] - 1.5*IQR1
CritSup1 <- quantile(tratc1)[4] + 1.5*IQR1
out1 <- which(tratc1 < CritInf1 | tratc1 > CritSup1)
consistenciac <- fresa2$consistenciac[-c(max(out1))
library(dplyr)
fresa2 <- fresa
tratc1 <- filter(fresa2, tratamientoc == 1) %>% select(consistenciac) %>% unlist
IQR1 <- IQR(tratc1)
CritInf1 <- quantile(tratc1)[2] - 1.5*IQR1
CritSup1 <- quantile(tratc1)[4] + 1.5*IQR1
out1 <- which(tratc1 < CritInf1 | tratc1 > CritSup1)
consistenciac <- fresa2$consistenciac[-c(out1))
library(dplyr)
fresa2 <- fresa
tratc1 <- filter(fresa2, tratamientoc == 1) %>% select(consistenciac) %>% unlist
IQR1 <- IQR(tratc1)
CritInf1 <- quantile(tratc1)[2] - 1.5*IQR1
CritSup1 <- quantile(tratc1)[4] + 1.5*IQR1
out1 <- which(tratc1 < CritInf1 | tratc1 > CritSup1)
consistenciac <- fresa2$consistenciac[-c(out1)
library(dplyr)
fresa2 <- fresa
tratc1 <- filter(fresa2, tratamientoc == 1) %>% select(consistenciac) %>% unlist
IQR1 <- IQR(tratc1)
CritInf1 <- quantile(tratc1)[2] - 1.5*IQR1
CritSup1 <- quantile(tratc1)[4] + 1.5*IQR1
out1 <- which(tratc1 < CritInf1 | tratc1 > CritSup1)
consistenciac <- fresa2$consistenciac[-c(out1)]
library(dplyr)
fresa2 <- fresa
tratc1 <- filter(fresa2, tratamientoc == 1) %>% select(consistenciac) %>% unlist
IQR1 <- IQR(tratc1)
CritInf1 <- quantile(tratc1)[2] - 1.5*IQR1
CritSup1 <- quantile(tratc1)[4] + 1.5*IQR1
out1 <- which(tratc1 < CritInf1 | tratc1 > CritSup1)
consistenciac1 <- fresa2$consistenciac[-c(out1)]
tratc2 <- filter(fresa2, tratamientoc == 2) %>% select(consistenciac) %>% unlist
IQR2 <- IQR(tratc2)
CritInf2 <- quantile(tratc2)[2] - 1.5*IQR2
CritSup2 <- quantile(tratc2)[4] + 1.5*IQR2
out2 <- which(tratc2 < CritInf2 | tratc2 > CritSup2)
consistenciac2 <- fresa2$consistenciac[-c(out2)]
out2
tratc3 <- filter(fresa2, tratamientoc == 3) %>% select(consistenciac) %>% unlist
IQR3 <- IQR(tratc3)
CritInf3 <- quantile(tratc3)[3] - 1.5*IQR3
CritSup3 <- quantile(tratc3)[4] + 1.5*IQR3
out3 <- which(tratc3 < CritInf3 | tratc3 > CritSup3)
consistenciac3 <- fresa2$consistenciac[-c(out3)]
tratc3 <- filter(fresa2, tratamientoc == 3) %>% select(consistenciac) %>% unlist
IQR3 <- IQR(tratc3)
CritInf3 <- quantile(tratc3)[3] - 1.5*IQR3
CritSup3 <- quantile(tratc3)[4] + 1.5*IQR3
out3 <- which(tratc3 < CritInf3 | tratc3 > CritSup3)
out3
consistenciac3 <- fresa2$consistenciac[-c(out3)]
length(out3)
consistenciasC <- rbind(concistenciac1,concistenciac2,concistenciac3)
library(dplyr)
fresa2 <- fresa
tratc1 <- filter(fresa2, tratamientoc == 1) %>% select(consistenciac) %>% unlist
IQR1 <- IQR(tratc1)
CritInf1 <- quantile(tratc1)[2] - 1.5*IQR1
CritSup1 <- quantile(tratc1)[4] + 1.5*IQR1
out1 <- which(tratc1 < CritInf1 | tratc1 > CritSup1)
consistenciac1 <- fresa2$consistenciac[-c(out1)]
consistenciasC <- rbind(consistenciac1,consistenciac2,consistenciac3)
consistenciac1
str(consistenciac1)
str(consistenciac2)
str(consistenciac)
str(consistenciac3)
consistenciasC
consistenciasC <- cbind(consistenciac1,consistenciac2,consistenciac3)
consistenciasC
consistenciasC <- rbind(consistenciac1,consistenciac2,consistenciac3)
consistenciasC
library(dplyr)
fresa2 <- fresa
tratc1 <- filter(fresa2, tratamientoc == 1) %>% select(consistenciac) %>% unlist
IQR1 <- IQR(tratc1)
CritInf1 <- quantile(tratc1)[2] - 1.5*IQR1
CritSup1 <- quantile(tratc1)[4] + 1.5*IQR1
out1 <- which(tratc1 < CritInf1 | tratc1 > CritSup1)
consistenciac1 <- unlist(fresa2$consistenciac[-c(out1)])
tratc2 <- filter(fresa2, tratamientoc == 2) %>% select(consistenciac) %>% unlist
IQR2 <- IQR(tratc2)
CritInf2 <- quantile(tratc2)[2] - 1.5*IQR2
CritSup2 <- quantile(tratc2)[4] + 1.5*IQR2
out2 <- which(tratc2 < CritInf2 | tratc2 > CritSup2)
out2
consistenciac2 <- unlist(fresa2$consistenciac[-c(out2)])
tratc3 <- filter(fresa2, tratamientoc == 3) %>% select(consistenciac) %>% unlist
IQR3 <- IQR(tratc3)
CritInf3 <- quantile(tratc3)[3] - 1.5*IQR3
CritSup3 <- quantile(tratc3)[4] + 1.5*IQR3
out3 <- which(tratc3 < CritInf3 | tratc3 > CritSup3)
out3
consistenciac3 <- unlist(fresa2$consistenciac[-c(out3)])
consistenciasC <- rbind(consistenciac1,consistenciac2,consistenciac3)
consistenciasC <- c(consistenciac1,consistenciac2,consistenciac3)
str(consistenciac3)
str(consistenciac2)
str(consistenciac1)
consistenciasC <- c(consistenciac1,consistenciac2,consistenciac3)
c(rep(1,233),rep(2,231),rep(3,224))
consistenciaSinOut <- data.frame(consistencia = consistenciasC, tratamientoc = tratamientoC)
consistenciasC <- c(consistenciac1,consistenciac2,consistenciac3)
tratamientoC <- c(rep(1,233),rep(2,231),rep(3,224))
consistenciaSinOut <- data.frame(consistencia = consistenciasC, tratamientoc = tratamientoC)
consistenciasC <- c(consistenciac1,consistenciac2,consistenciac3)
tratamientoC <- c(rep(1,233),rep(2,231),rep(3,224))
consistenciaSinOut <- data.frame(consistencia = consistenciasC, tratamientoc = as.factor(tratamientoC))
library(ggplot2)
ggplot(consistenciaSinOut,
aes( x = tratamientoc ,
y = consistencia,
fill = tratamientoc)) +
geom_boxplot()
nasb <- which(is.na(fresa$gradosbrixb))
df2 <- data.frame(gradosbrixb = fresa$gradosbrixb[-nasb],
tratamientob = as.factor(fresa$tratamientob[-nasb]))
library(ggplot2)
ggplot(df2,
aes( x = tratamientob,
y = gradosbrixb,
fill = tratamientob)) +
geom_boxplot()
round(3.6396,3)
round(3.6396,4)
